#BlueJ class context
comment0.target=Hand
comment0.text=\r\n\ A\ class\ made\ for\ the\ Blackjack\ project.\ \r\n\ Upon\ calling\ its\ constructor,\ it\ creates\ a\ Hand\ with\ a\ registered\ owner\ and\ draws\ two\ cards.\r\n\r\n\ @author\ Jeremy\ Montes\r\n\ @version\ 9/14/2022\r\n
comment1.params=min\ max
comment1.target=int\ pickInteger(int,\ int)
comment10.params=cardNumber
comment10.target=int\ getCard(int)
comment10.text=\r\n\ Used\ for\ testing,\ basically\ drawCard()\ but\ the\ card\ chosen\ is\ from\ the\ parameter,\ and\ not\ randomly\ generated.\r\n\ \r\n\ @params\ cardNumber\ -\ The\ card\ specified\ to\ be\ chosen.\r\n\ @returns\ number\ -\ The\ value\ of\ the\ selected\ card\r\n
comment11.params=number
comment11.target=void\ TEST_addTotal(int)
comment11.text=\r\n\ Mutator\ method\ used\ for\ testing,\ adds\ to\ the\ instance\ variable\ 'total'.\ However,\ this\ would\ break\ the\ Hand's\ data\ as\ it\ wouldn't\ register\ any\ Aces\ or\ cards\ into\ certain\ variables.\r\n\ @params\ number\ -\ The\ value\ to\ add\ to\ the\ total.\r\n
comment12.params=number
comment12.target=void\ TEST_changeNumAces(int)
comment12.text=\r\n\ Mutator\ method\ used\ for\ testing,\ changes\ the\ instance\ variable\ 'numAces'.\ Does\ not\ change\ the\ cards\ in\ cardsList.\r\n\ @params\ number\ -\ Change\ the\ number\ of\ Aces\ the\ Hand\ thinks\ it\ has.\r\n
comment13.params=
comment13.target=int\ TEST_getNumAces()
comment13.text=\r\n\ Accessor\ method\ used\ for\ testing,\ gets\ the\ numAces\ instance\ variable.\r\n\ @return\ The\ value\ of\ numAces\ of\ an\ Hand\ object.\r\n
comment14.params=value
comment14.target=void\ hit(int)
comment14.text=\r\n\ Calling\ the\ hit\ method\ with\ an\ integer\ parameter\ allows\ a\ specific\ card\ value\ to\ be\ added\ to\ the\ total,\ it\ would\ then\ register\ the\ card\ into\ cardList\ and/or\ numAces.\r\n\ @params\ value\ -\ The\ value\ of\ the\ card\ to\ be\ obtained\ and\ properly\ adds\ it\ to\ the\ total.\r\n
comment15.params=
comment15.target=Hand()
comment15.text=\ \r\n\ Hand\ constructor\ with\ no\ parameters,\ always\ has\ owner\ \=\ "Dealer"\ \r\n
comment2.params=owner
comment2.target=Hand(java.lang.String)
comment2.text=\r\n\ The\ constructor\ used\ in\ the\ Blackjack\ game,\ it\ registers\ the\ owner\ of\ the\ hand\ and\ draws\ two\ cards.\r\n\ \r\n\ @params\ owner\ -\ The\ name\ of\ the\ Hand's\ owner.\r\n
comment3.params=
comment3.target=Hand\ TEST_createHand()
comment3.text=\r\n\ Method\ that\ creates\ a\ Hand\ named\ "Test",\ only\ used\ for\ testing\ purposes.\r\n\ @return\ \r\n
comment4.params=
comment4.target=void\ hit()
comment4.text=\r\n\ Calling\ the\ hit\ method\ without\ a\ parameter\ generates\ a\ random\ card\ from\ a\ suit,\ then\ adds\ its\ value\ to\ the\ total.\r\n\ It\ would\ also\ register\ the\ card\ into\ cardList,\ and\ increases\ numAces\ if\ the\ card\ is\ an\ Ace.\r\n
comment5.params=
comment5.target=void\ displayHandStats()
comment5.text=\r\n\ Prints\ three\ lines\ that\ describes\ the\ Hand's\ owner,\ their\ list\ of\ cards,\ and\ current\ value.\r\n\ Value\ is\ based\ on\ getRealTotal(),\ not\ the\ 'total'\ variable.\r\n\ If\ the\ Hand's\ owner\ is\ the\ dealer,\ it\ would\ hide\ information\ the\ first\ time\ it\ gets\ called.\r\n
comment6.params=
comment6.target=java.lang.String\ getLastCard()
comment6.text=\r\n\ Obtains\ the\ last\ card\ of\ the\ Hand's\ cardList\ variable.\ Used\ in\ Blackjack\ to\ tell\ the\ card\ that\ the\ user\ obtained.\r\n\ @return\ The\ last\ element\ of\ the\ cardList\ array.\r\n
comment7.params=
comment7.target=boolean\ isSafe()
comment7.text=\ Whether\ or\ not\ a\ hand\ is\ "safe"\ is\ based\ on\ the\ getRealTotal\ \r\n\ method,\ not\ the\ "total"\ variable.\r\n\ \r\n\ @return\ 'false'\ if\ getRealTotal()\ is\ greater\ than\ 21.\ 'true'\ if\ otherwise,\ meaning\ it's\ 21\ or\ less\ and\ considered\ "safe".\ \r\n
comment8.params=
comment8.target=int\ getRealTotal()
comment8.text=\r\n\ Calculates\ the\ value\ of\ the\ cards,\ not\ the\ total,\ and\ decides\ whether\ or\ not\ the\ first\ Ace\ is\ worth\ 1\ or\ 11.\r\n\r\n\ @return\ \ \ \ If\ the\ total\ is\ greater\ than\ 21,\ and\ if\ the\ hand\ has\ atleast\ one\ Ace,\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ return\ the\ total\ as\ if\ the\ first\ Ace\ counted\ as\ 1\ instead.\ Otherwise,\ just\ return\ the\ total.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \r\n
comment9.params=numAces
comment9.target=int\ drawCard(int)
comment9.text=\r\n\ This\ method\ generates\ a\ random\ card\ from\ a\ suit,\ then\ adds\ its\ value\ to\ 'total'.\r\n\ It\ chooses\ from\ 1\ to\ 13\ to\ obtain\ any\ card\ and\ its\ name,\ which\ gets\ registered\ into\ 'cardList'.\r\n\ If\ the\ card\ generated\ is\ an\ Ace,\ the\ first\ one\ is\ always\ worth\ 11,\ then\ new\ ones\ will\ be\ worth\ 1.\r\n\ Whether\ or\ not\ the\ first\ Ace\ changes\ in\ 1\ is\ not\ calculated\ in\ this\ method.\r\n\ \r\n\ @params\ numAces\ -\ The\ number\ of\ Aces\ in\ the\ Hand\ object.\r\n\ @returns\ number\ -\ The\ value\ of\ the\ card\ generated.\r\n
numComments=16
